<?xml version="1.0" encoding="UTF-8"?>
<!-- create SQL Mapper-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="mappers.userMapper"> <!-- like package -->
	<!-- no need loop resultSet -->
	<resultMap type="userVO" id="userResult">
		<!-- <result property="bkid" column="bkid"/>-->
	</resultMap>
	
	<resultMap type="userDto" id="userDtoResult">

	</resultMap>
	<!-- List<Book> books = selectAll -->
	<select id="selectAll" resultMap="userResult"> <!-- mapper.bookMapper.selectAll -->
		<![CDATA[
			select * from user 
		]]>
	</select>
	<select id="selectOne" resultMap="userResult" parameterType="int">
		<![CDATA[
			select * from user 
			where userid = #{userid}
		]]>
	</select>
	<select id="selectByEmail" resultMap="userResult" parameterType="String">
		<![CDATA[
			select * from user 
			where email = #{email}
		]]>
	</select>
	<select id="selectByUri" resultMap="userResult" parameterType="String">
		<![CDATA[
			select * from user 
			where userurl = #{userurl}
		]]>
	</select>
	<!-- _______________________________friend_________________________ -->
	<select id="selectListFriendById" resultMap="userResult" parameterType="map">
		<![CDATA[
			SELECT distinct user.name, user.useravt, user.userbgr, user.userid, user.userurl
			FROM friend, user 
			WHERE friend.reid = ${reid} AND (friend.user1id = user.userid OR friend.user2id = user.userid) 
			AND (friend.user1id = ${userid} OR friend.user2id = #{userid})
		]]>
	</select>
	
	<select id = "selectMutualFriend" resultMap = "userDtoResult" parameterType = "int" statementType = "CALLABLE">
      {call mutual_friend(#{id, jdbcType = INTEGER, mode = IN})}
    </select> 
    
    <select id = "selectListMutual" resultMap = "userResult" parameterType = "map" statementType = "CALLABLE">
      {call list_mutual(
       #{myid, jdbcType = INTEGER, mode = IN}
      ,#{fid, jdbcType = INTEGER, mode = IN}
      )}
    </select>
	<!-- _______________________________friend_________________________ -->
	<!-- _______________________________pending_________________________ -->
	<select id="selectListPending" resultMap="userResult" parameterType="map">
		<![CDATA[
			SELECT distinct user.name, user.useravt, user.userbgr, user.userid, user.userurl
			FROM friend, user 
			WHERE friend.reid = ${reid} AND user2id = ${userid} AND (friend.user1id = user.userid OR friend.user2id = user.userid)
		]]>
	</select>
	
	
	
	
	<!-- _______________________________pending_________________________ -->
	<!-- _______________________________like_________________________ -->
	<select id="selectNameByPostId" resultMap="userResult" parameterType="int">
		<![CDATA[
			SELECT a.name FROM user a, ambi.like b WHERE a.userid=b.userid AND b.postid=#{postId}
		]]>
	</select>	
	<!-- _______________________________like_________________________ -->
	
	<insert id="insert" useGeneratedKeys="true" keyColumn="userid" keyProperty="userId" parameterType="userVO">
		<![CDATA[
			insert into user
			(name,phone,email,password,isactive,userurl,useravt,userbgr)
			values
			(#{name},#{phone},#{email},#{password},#{isactive},#{userUrl},#{useravt},#{userbgr})
		]]>
	</insert>
	<update id="update" parameterType="userVO">
		<![CDATA[
			update user set
			name=#{name},
			phone=#{phone},
			email=#{email},
			password=#{password},
			isactive=#{isactive},
			userurl = #{userUrl},
			useravt = #{useravt},
			userbgr = #{userbgr}
			where userid = #{userId}
		]]>
	</update>
	<delete id="delete" parameterType="int">
		
			delete from user WHERE userid=#{userid}
		
	</delete>
</mapper>